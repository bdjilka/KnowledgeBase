from django.contrib.auth.models import AbstractUser
from django.db import models


class Pentester(AbstractUser):
    """
    Model of user.
    """
    sphere = models.CharField(
        max_length=50,
        verbose_name='Field of interest'
    )

    class Meta:
        verbose_name = 'User'
        verbose_name_plural = 'Users'

    def __str__(self):
        return self.username


class Sphere(models.Model):
    """
    Model of fields of interests.
    """
    name = models.CharField(
        max_length=100,
        verbose_name='Name'
    )

    class Meta:
        verbose_name = 'Sphere'
        verbose_name_plural = 'Spheres'

    def __str__(self):
        return self.name


class Tag(models.Model):
    """
    Model of tag option for command.
    """
    tag = models.CharField(
        max_length=30,
        verbose_name='Tag'
    )

    class Meta:
        verbose_name = 'Tag'
        verbose_name_plural = 'Tags'

    def __str__(self):
        return self.tag


class Command(models.Model):
    """
    Model of command.
    """
    command = models.CharField(
        max_length=200,
        verbose_name='Command'
    )
    description = models.TextField(
        verbose_name='Description'
    )
    tags = models.ManyToManyField(
        to=Tag,
        verbose_name='Tags',
        blank=True,
    )
    sphere = models.ForeignKey(
        to=Sphere,
        verbose_name='Sphere',
        on_delete=models.CASCADE,
        blank=True
    )

    class Meta:
        verbose_name = 'Command'
        verbose_name_plural = 'Commands'

    def __str__(self):
        return self.command
